// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.1.4 (stable) (Tue Oct 17 14:55:53 2023 +0000) on "windows_x64"
// Module: web/main
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__web__main(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const html = dart_sdk.html;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var main = Object.create(dart.library);
  var venue$ = Object.create(dart.library);
  var $onClick = dartx.onClick;
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $text = dartx.text;
  var $_set = dartx._set;
  var $toString = dartx.toString;
  var $innerHtml = dartx.innerHtml;
  var $border = dartx.border;
  var $style = dartx.style;
  var $createTHead = dartx.createTHead;
  var $insertRow = dartx.insertRow;
  var $addCell = dartx.addCell;
  var $createTBody = dartx.createTBody;
  var $addRow = dartx.addRow;
  var $split = dartx.split;
  var $borderRadius = dartx.borderRadius;
  var $remove = dartx.remove;
  var $children = dartx.children;
  var $add = dartx.add;
  var $forEach = dartx.forEach;
  var $append = dartx.append;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    IdentityMapOfString$bool: () => (T.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))(),
    MouseEventTovoid: () => (T.MouseEventTovoid = dart.constFn(dart.fnType(dart.void, [html.MouseEvent])))(),
    MapOfString$bool: () => (T.MapOfString$bool = dart.constFn(core.Map$(core.String, core.bool)))(),
    StringAndboolTovoid: () => (T.StringAndboolTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.bool])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["org-dartlang-app:///web/venue.dart"];
  main.main = function main$() {
    let reserved = new (T.IdentityMapOfString$bool()).new();
    let submit = html.ButtonElement.as(html.querySelector("#submit"));
    submit[$onClick].listen(dart.fn(event => {
      let venue = html.SelectElement.as(html.querySelector("#venue")).value;
      let date = html.InputElement.as(html.querySelector("#date")).value;
      let time = html.SelectElement.as(html.querySelector("#time")).value;
      let progName = html.InputElement.as(html.querySelector("#progName")).value;
      let newBook = new venue$.Venue.new(reserved);
      newBook.reserveVenue(dart.nullCheck(venue), dart.nullCheck(date), dart.nullCheck(time), dart.nullCheck(progName));
      newBook.printReservedTable();
    }, T.MouseEventTovoid()));
  };
  var reserved = dart.privateName(venue$, "Venue.reserved");
  var _venue = dart.privateName(venue$, "_venue");
  var _key = dart.privateName(venue$, "_key");
  var _dateTime = dart.privateName(venue$, "_dateTime");
  var _progName = dart.privateName(venue$, "_progName");
  venue$.Venue = class Venue extends core.Object {
    get reserved() {
      return this[reserved];
    }
    set reserved(value) {
      this[reserved] = value;
    }
    static ['_#new#tearOff'](reserved1) {
      return new venue$.Venue.new(reserved1);
    }
    reserveVenue(venue, date, time, progName) {
      let t$360, t$360$, t$360$0;
      this[_venue] = venue;
      this[_progName] = progName;
      this[_key] = venue + " " + date + " " + time + " " + progName;
      this[_dateTime] = core.DateTime.parse(date + " " + time);
      if (this.reserved[$containsKey](this[_key]) && this.reserved[$_get](this[_key]) === true) {
        t$360 = html.querySelector("#output");
        t$360 == null ? null : t$360[$text] = "Venue is not available. Please choose another room or another time";
      } else if (this[_dateTime].isBefore(new core.DateTime.now())) {
        t$360$ = html.querySelector("#output");
        t$360$ == null ? null : t$360$[$text] = "Please choose a date and time in the future";
      } else {
        this.reserved[$_set](this[_key], true);
        t$360$0 = html.querySelector("#output");
        t$360$0 == null ? null : t$360$0[$text] = "Successfully booked venue " + this[_venue] + " at " + dart.str(this[_dateTime]);
      }
    }
    printReservedMap() {
      let t$360;
      let record = html.querySelector("#record");
      t$360 = record;
      t$360 == null ? null : t$360[$text] = this.reserved[$toString]();
    }
    printReservedTable() {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4;
      let outputDiv = html.querySelector("#records");
      t$360 = outputDiv;
      t$360 == null ? null : t$360[$text] = this.reserved[$toString]();
      t$360$ = outputDiv;
      t$360$ == null ? null : t$360$[$innerHtml] = "";
      let table = html.TableElement.new();
      table[$style][$border] = "1px solid black";
      let headerRow = table[$createTHead]()[$insertRow](0);
      t$360$0 = headerRow[$addCell]();
      (() => {
        t$360$0[$text] = "Venue";
        t$360$0[$style][$border] = "1px solid black";
        return t$360$0;
      })();
      t$360$1 = headerRow[$addCell]();
      (() => {
        t$360$1[$text] = "Date";
        t$360$1[$style][$border] = "1px solid black";
        return t$360$1;
      })();
      t$360$2 = headerRow[$addCell]();
      (() => {
        t$360$2[$text] = "Time";
        t$360$2[$style][$border] = "1px solid black";
        return t$360$2;
      })();
      t$360$3 = headerRow[$addCell]();
      (() => {
        t$360$3[$text] = "Programme Name";
        t$360$3[$style][$border] = "1px solid black";
        return t$360$3;
      })();
      this.reserved[$forEach](dart.fn((key, status) => {
        let t$360, t$360$, t$360$0, t$360$1, t$360$2;
        let row = table[$createTBody]()[$addRow]();
        let keyParts = key[$split](" ");
        t$360 = row[$addCell]();
        (() => {
          t$360[$text] = keyParts[$_get](0);
          t$360[$style][$border] = "1px solid black";
          return t$360;
        })();
        t$360$ = row[$addCell]();
        (() => {
          t$360$[$text] = keyParts[$_get](1);
          t$360$[$style][$border] = "1px solid black";
          return t$360$;
        })();
        t$360$0 = row[$addCell]();
        (() => {
          t$360$0[$text] = keyParts[$_get](2);
          t$360$0[$style][$border] = "1px solid black";
          return t$360$0;
        })();
        t$360$1 = row[$addCell]();
        (() => {
          t$360$1[$text] = keyParts[$_get](3);
          t$360$1[$style][$border] = "1px solid black";
          return t$360$1;
        })();
        let deleteButton = (t$360$2 = html.ButtonElement.new(), (() => {
          t$360$2[$text] = "Delete";
          t$360$2[$style][$border] = "1px solid black";
          t$360$2[$style][$borderRadius] = "5px";
          t$360$2[$onClick].listen(dart.fn(event => {
            row[$remove]();
            this.reserved[$remove](key);
          }, T.MouseEventTovoid()));
          return t$360$2;
        })());
        row[$addCell]()[$children][$add](deleteButton);
      }, T.StringAndboolTovoid()));
      t$360$4 = outputDiv;
      t$360$4 == null ? null : t$360$4[$append](table);
    }
  };
  (venue$.Venue.new = function(reserved1) {
    this[_venue] = "";
    this[_key] = "";
    this[_dateTime] = new core.DateTime.now();
    this[_progName] = "";
    this[reserved] = T.MapOfString$bool().as(reserved1);
    ;
  }).prototype = venue$.Venue.prototype;
  dart.addTypeTests(venue$.Venue);
  dart.addTypeCaches(venue$.Venue);
  dart.setMethodSignature(venue$.Venue, () => dart.global.Object.setPrototypeOf({
    reserveVenue: dart.fnType(dart.void, [core.String, core.String, core.String, core.String]),
    printReservedMap: dart.fnType(dart.void, []),
    printReservedTable: dart.fnType(dart.void, [])
  }, dart.getMethods(dart.global.Object.getPrototypeOf(venue$.Venue))));
  dart.setLibraryUri(venue$.Venue, I[0]);
  dart.setFieldSignature(venue$.Venue, () => dart.global.Object.setPrototypeOf({
    [_venue]: dart.fieldType(core.String),
    [_key]: dart.fieldType(core.String),
    [_dateTime]: dart.fieldType(core.DateTime),
    [_progName]: dart.fieldType(core.String),
    reserved: dart.fieldType(core.Map$(core.String, core.bool))
  }, dart.getFields(dart.global.Object.getPrototypeOf(venue$.Venue))));
  dart.trackLibraries("web/main", {
    "org-dartlang-app:///web/main.dart": main,
    "org-dartlang-app:///web/venue.dart": venue$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["main.dart","venue.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIoB,mBAAW;AACT,iBAAkC,sBAAzB,mBAAc;AAazC,IAZF,AAAO,AAAQ,MAAT,kBAAgB,QAAC;AAEjB,kBAAiC,AAAkB,sBAA1C,mBAAc;AACvB,iBAA+B,AAAiB,qBAAxC,mBAAc;AACtB,iBAA+B,AAAkB,sBAAzC,mBAAc;AACtB,qBAAuC,AAAiB,qBAA5C,mBAAc;AAGxB,oBAAU,qBAAM,QAAQ;AACsB,MAApD,AAAQ,OAAD,cAAmB,eAAL,KAAK,GAAO,eAAJ,IAAI,GAAO,eAAJ,IAAI,GAAU,eAAR,QAAQ;AACtB,MAA5B,AAAQ,OAAD;;EAKX;;;;;;;ICboB;;;;;;;;;iBASO,OAAc,MAAa,MAAa;;AACjD,MAAd,eAAS,KAAK;AACM,MAApB,kBAAY,QAAQ;AACiB,MAArC,aAAS,AAA4B,KAAvB,SAAE,IAAI,SAAE,IAAI,SAAE,QAAQ;AACK,MAAzC,kBAAqB,oBAAQ,AAAW,IAAP,SAAE,IAAI;AAEvC,UAAI,AAAS,4BAAY,eAAS,AAAQ,AAAO,qBAAN,gBAAS;AAEsB,gBADxE,mBAAc;wBAAd,OAA0B,eACtB;YACC,KAAI,AAAU,yBAAkB;AAEY,iBADjD,mBAAc;yBAAd,OAA0B,gBACtB;;AAEiB,QAArB,AAAQ,qBAAC,YAAQ;AAEoC,kBADrD,mBAAc;0BAAd,OAA0B,iBACtB,AAAiD,+BAArB,eAAM,kBAAK;;IAE/C;;;AAGW,mBAAS,mBAAc;AACE,cAAlC,MAAM;sBAAN,OAAQ,eAAO,AAAS;IAC1B;;;AAoBW,sBAAY,mBAAc;AACE,cAArC,SAAS;sBAAT,OAAW,eAAO,AAAS;AAEF,eAAzB,SAAS;uBAAT,OAAW,qBAAY;AAGnB,kBAAQ;AAC0B,MAAtC,AAAM,AAAM,KAAP,oBAAgB;AAGjB,sBAAY,AAAM,AAAc,KAAf,6BAAyB;AAIV,gBAFpC,AAAU,SAAD;MAAC;AACN,yBAAO;AACD,QAAN,2BAAe;;;AAGiB,gBAFpC,AAAU,SAAD;MAAC;AACN,yBAAO;AACD,QAAN,2BAAe;;;AAGiB,gBAFpC,AAAU,SAAD;MAAC;AACN,yBAAO;AACD,QAAN,2BAAe;;;AAGiB,gBAFpC,AAAU,SAAD;MAAC;AACN,yBAAO;AACD,QAAN,2BAAe;;;AAuCjB,MApCF,AAAS,wBAAQ,SAAC,KAAK;;AACjB,kBAAM,AAAM,AAAc,KAAf;AACX,uBAAW,AAAI,GAAD,SAAO;AAKW,gBAFpC,AAAI,GAAD;QAAC;AACA,yBAAO,AAAQ,QAAA,QAAC;AACV,UAAN,yBAAe;;;AAIiB,iBAFpC,AAAI,GAAD;QAAC;AACA,0BAAO,AAAQ,QAAA,QAAC;AACV,UAAN,0BAAe;;;AAIiB,kBAFpC,AAAI,GAAD;QAAC;AACA,2BAAO,AAAQ,QAAA,QAAC;AACV,UAAN,2BAAe;;;AAIiB,kBAFpC,AAAI,GAAD;QAAC;AACA,2BAAO,AAAQ,QAAA,QAAC;AACV,UAAN,2BAAe;;;AAGf,gEAAe;AACf,2BAAO;AACD,UAAN,2BAAe;AACT,UAAN,iCAAqB;AACb,UAAR,yBAAe,QAAC;AAEJ,YAAZ,AAAI,GAAD;AAGiB,YAApB,AAAS,uBAAO,GAAG;;;;AAIiB,QAAxC,AAAI,AAAU,AAAS,GAApB,8BAAwB,YAAY;;AAIjB,gBAAxB,SAAS;wBAAT,OAAW,iBAAO,KAAK;IACzB;;+BAnHU;IACG,eAAE;IACJ,aAAE;IACG,kBAAW;IACX,kBAAE;qBACH,wBAAE,SAAS","file":"main.ddc.js"}');
  // Exports:
  return {
    web__main: main,
    web__venue: venue$
  };
}));

//# sourceMappingURL=main.ddc.js.map
